version: '3'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: gunicorn SiteForOlimpic.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - db

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./nginx/certs:/etc/ssl/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    ports:
      - "5432:5432"
      - "5433:5433"

  redis:
    image: "redis:alpine"
    restart: always

  flower:
    image: mher/flower
    environment:
      - FLOWER_PORT=5555
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"

  worker:
    restart: always
    build: .
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
      - web
    env_file:
      - ./.env.prod
    command: 'celery -A SiteForOlimpic worker -l info'

  beat:
    restart: always
    build: .
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
      - web
      - worker
    env_file:
      - ./.env.prod
    command: 'celery -A SiteForOlimpic beat -l info'


volumes:
  static_volume:
  media_volume:
  postgres_data:

# docker-compose -f docker-compose.prod.yml build
