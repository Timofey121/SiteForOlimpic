# Generated by Django 4.2.3 on 2023-07-08 19:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=2000, verbose_name='Telegram id')),
                ('feedback', models.CharField(max_length=2000, verbose_name='Обратная связь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=2000, verbose_name='Telegram id')),
                ('data', models.CharField(max_length=2000, verbose_name='Обращение')),
            ],
            options={
                'verbose_name': 'Оплата',
                'verbose_name_plural': 'Оплата',
                'ordering': ['user', 'data'],
            },
        ),
        migrations.CreateModel(
            name='RegistrationSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=2000, verbose_name='Имя пользователя')),
                ('data_registration', models.CharField(max_length=2000, verbose_name='Дата регистрации')),
                ('email', models.CharField(default=None, max_length=2000, verbose_name='E-mail')),
                ('blocked', models.BooleanField(max_length=2000, verbose_name='Заблокирован ли?')),
            ],
            options={
                'verbose_name': 'Регистрация Сайт',
                'verbose_name_plural': 'Регистрация Сайт',
                'ordering': ['user', '-data_registration'],
            },
        ),
        migrations.CreateModel(
            name='RegistrationTelegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(max_length=2000, verbose_name='Telegram id')),
                ('full_name', models.CharField(max_length=2000, verbose_name='Имя пользователя')),
                ('data_registration', models.CharField(max_length=2000, verbose_name='Дата регистрации')),
                ('blocked', models.CharField(max_length=2000, verbose_name='Заблокирован ли?')),
            ],
            options={
                'verbose_name': 'Регистрация Телеграмм',
                'verbose_name_plural': 'Регистрация Телеграм',
                'ordering': ['full_name', '-data_registration'],
            },
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=2000, verbose_name='Имя пользователя')),
                ('token', models.CharField(max_length=2000, verbose_name='Токен')),
                ('data_created', models.DateField(auto_now_add=True, null=True, verbose_name='Время создания ссылки для сброса пароля')),
            ],
            options={
                'verbose_name': 'Сброс Пароля',
                'verbose_name_plural': 'Сброс пароля',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='SecretToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(max_length=2000, verbose_name='Telegram id')),
                ('secret_token', models.CharField(max_length=2000, verbose_name='Секретный Токен')),
            ],
            options={
                'verbose_name': 'Секретный Токен',
                'verbose_name_plural': 'Секретные Токены',
                'ordering': ['telegram_id'],
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=2000, verbose_name='Предмет')),
                ('slug', models.SlugField(max_length=2000, unique=True, verbose_name='URL')),
                ('photo', models.ImageField(upload_to='subjects/', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['subject'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=2000, verbose_name='Telegram id')),
                ('help', models.CharField(max_length=2000, verbose_name='Обращение')),
            ],
            options={
                'verbose_name': 'Обращение в помощь',
                'verbose_name_plural': 'Обращения в помощь',
                'ordering': ['user', 'help'],
            },
        ),
        migrations.CreateModel(
            name='UserNameAndTelegramID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(max_length=2000, verbose_name='Telegram id')),
                ('user', models.CharField(max_length=2000, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Соединение Телеграмм и Сайта',
                'verbose_name_plural': 'Соединение Телеграмм и Сайта',
                'ordering': ['telegram_id'],
            },
        ),
        migrations.CreateModel(
            name='Olympiads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=2000, verbose_name='Название олимпиады')),
                ('start', models.CharField(max_length=2000, verbose_name='Дата начала олимпиады')),
                ('stage', models.CharField(default='None', max_length=2000, verbose_name='Этап олимпиады')),
                ('schedule', models.CharField(default='None', max_length=2000, verbose_name='Расписание олимпиады')),
                ('site', models.CharField(default='None', max_length=2000, verbose_name='Сайт олимпиады')),
                ('rsoch', models.BooleanField(max_length=2000, verbose_name='Входит ли в перечень?')),
                ('sub', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='olympic.subjects', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Олимпиада',
                'verbose_name_plural': 'Олимпиады',
                'ordering': ['sub', 'start'],
            },
        ),
        migrations.CreateModel(
            name='NotificationDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=2000, verbose_name='Пользователь или его Telegram_ID')),
                ('title', models.CharField(max_length=2000, verbose_name='Название олимпиады')),
                ('start', models.CharField(max_length=2000, verbose_name='Дата начала олимпиады')),
                ('stage', models.CharField(default='None', max_length=2000, verbose_name='Этап олимпиады')),
                ('schedule', models.CharField(default='None', max_length=2000, verbose_name='Расписание олимпиады')),
                ('site', models.CharField(default='None', max_length=2000, verbose_name='Сайт олимпиады')),
                ('rsoch', models.BooleanField(max_length=2000, verbose_name='Входит ли в перечень?')),
                ('sub', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='olympic.subjects', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Подключенное уведомление',
                'verbose_name_plural': 'Подключенные уведомления',
                'ordering': ['user', 'start'],
            },
        ),
    ]
